{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(chmod:*)",
      "Bash(docker-compose logs:*)",
      "Bash(docker-compose exec:*)",
      "Bash(curl:*)",
      "Bash(ls:*)",
      "Bash(docker-compose:*)",
      "Bash(./scripts/setup-simple.sh:*)",
      "Bash(bash:*)",
      "Bash(docker rm:*)",
      "WebFetch(domain:embeddedinventor.com)",
      "Bash(docker stop:*)",
      "Bash(docker run:*)",
      "Bash(rm:*)",
      "Bash(sudo rm:*)",
      "Bash(docker inspect:*)",
      "WebFetch(domain:docs.gitlab.com)",
      "Bash(yamllint:*)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(dos2unix:*)",
      "Bash(python3:*)",
      "Bash(cp:*)",
      "Bash(log_info \"Test from GitLab CI variable\")",
      "Bash(log_error:*)",
      "Bash(log_debug \"Test debug message\")",
      "Bash(log_info \"✅ GitLab CI style logging working!\")",
      "Bash(log_warn \"⚠️ Warning message\")",
      "Bash(log_debug \"🔍 Debug information\")",
      "Bash(log_info \"✅ Component logging functions work correctly\")",
      "Bash(log_debug \"Testing embedded script functionality\")",
      "Bash(log_warn \"Component is ready for deployment\")",
      "WebSearch",
      "WebFetch(domain:about.gitlab.com)",
      "WebFetch(domain:forum.gitlab.com)",
      "WebFetch(domain:stackoverflow.com)",
      "WebFetch(domain:gitlab.com)",
      "WebFetch(domain:docs.renovatebot.com)",
      "Bash(npm install:*)",
      "Bash(node:*)",
      "Bash(RENOVATE_DRY_RUN=full renovate --dry-run=full --config-file=config.js)",
      "Bash(RENOVATE_TOKEN=dummy node -e \"\nconst config = require(''./config.js'');\nconst regexManager = config.regexManagers.find(m => m.depNameTemplate);\nconsole.log(''depNameTemplate type:'', typeof regexManager.depNameTemplate);\nconsole.log(''depNameTemplate value:'', regexManager.depNameTemplate);\nif (typeof regexManager.depNameTemplate === ''string'') {\n  console.log(''✓ depNameTemplate is correctly a string'');\n} else {\n  console.log(''✗ depNameTemplate should be a string'');\n  process.exit(1);\n}\n\")"
    ],
    "deny": [],
    "defaultMode": "acceptEdits"
  }
}