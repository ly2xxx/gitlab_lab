# Static Child Pipeline Configuration
# This pipeline is triggered from the parent pipeline with predefined jobs

# Include echo functions
include:
  - local: '.gitlab/ci/echo.yml'

stages:
  - child-validate
  - child-build
  - child-test
  - child-report

variables:
  CHILD_PIPELINE_TYPE: "static"

# Inherit variables from parent
default:
  before_script:
    - eval "$ECHO_FUNCTIONS"
    - log_info "ðŸ”— Child Pipeline (Static) - ID- $CI_PIPELINE_ID"
    - log_info "ðŸ“‹ Parent Pipeline ID- $PARENT_PIPELINE_ID"
    - log_info "ðŸŽ¯ Child Type- $CHILD_TYPE"

# Child pipeline validation
child-validate-config:
  stage: child-validate
  script:
    - log_info "âœ… Validating child pipeline configuration"
    - log_debug "Checking inherited variables..."
    - log_debug "Parent Pipeline- $PARENT_PIPELINE_ID"
    - log_debug "Child Type- $CHILD_TYPE"

# Build tasks specific to this child pipeline
child-build-component-a:
  stage: child-build
  script:
    - log_info "ðŸ”¨ Building Component A in child pipeline"
    - mkdir -p child-artifacts/component-a
    - echo "Component A built at $(date)" > child-artifacts/component-a/build.log
    - log_info "âœ… Component A build completed"
  artifacts:
    paths:
      - child-artifacts/component-a/
    expire_in: 30 minutes

child-build-component-b:
  stage: child-build
  script:
    - log_info "ðŸ”¨ Building Component B in child pipeline"
    - mkdir -p child-artifacts/component-b
    - echo "Component B built at $(date)" > child-artifacts/component-b/build.log
    - log_info "âœ… Component B build completed"
  artifacts:
    paths:
      - child-artifacts/component-b/
    expire_in: 30 minutes

# Parallel testing in child pipeline
child-test-unit:
  stage: child-test
  script:
    - log_info "ðŸ§ª Running unit tests in child pipeline"
    - log_debug "Testing Component A..."
    - log_debug "Testing Component B..."
    - log_info "âœ… Unit tests passed"
  needs:
    - child-build-component-a
    - child-build-component-b

child-test-integration:
  stage: child-test
  script:
    - log_info "ðŸ”— Running integration tests in child pipeline"
    - log_debug "Testing component interactions..."
    - log_info "âœ… Integration tests passed"
  needs:
    - child-build-component-a
    - child-build-component-b

# Generate report from child pipeline
child-generate-report:
  stage: child-report
  script:
    - log_info "ðŸ“Š Generating child pipeline report"
    - mkdir -p reports
    - |
      cat > reports/child-static-report.json << EOF
      {
        "pipeline_type": "static-child",
        "parent_pipeline_id": "$PARENT_PIPELINE_ID",
        "child_pipeline_id": "$CI_PIPELINE_ID",
        "components_built": ["component-a", "component-b"],
        "tests_run": ["unit", "integration"],
        "status": "success",
        "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
      }
      EOF
    - log_info "ðŸ“„ Report generated- reports/child-static-report.json"
    - log_debug "Report content-"
    - cat reports/child-static-report.json
  artifacts:
    paths:
      - reports/
    expire_in: 1 day
  needs:
    - child-test-unit
    - child-test-integration