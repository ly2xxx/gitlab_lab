version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: node:18-alpine
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
      - redis

  backend:
    build:
      context: .
      dockerfile: Dockerfile.python
    image: python:3.11-alpine
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    environment:
      - FLASK_ENV=development
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
      - postgres

  php-api:
    build:
      context: .
      dockerfile: Dockerfile.php
    image: php:8.1-fpm-alpine
    ports:
      - "9000:9000"
    volumes:
      - ./php:/app
    depends_on:
      - postgres

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: renovate_test
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    image: nginx:1.23-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
      - php-api

volumes:
  redis_data:
  postgres_data: