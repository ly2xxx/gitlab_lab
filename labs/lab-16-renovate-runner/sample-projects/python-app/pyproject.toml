[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "renovate-test-python"
description = "Sample Python application for testing Renovate Runner integration"
readme = "README.md"
authors = [
    {name = "GitLab Lab Tutorial", email = "tutorial@example.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.8"
dependencies = [
    "Flask>=2.0.0,<3.0.0",
    "SQLAlchemy>=1.4.0,<2.0.0",
    "requests>=2.28.0",
    "python-dotenv>=0.19.0",
    "PyYAML>=6.0",
    "cryptography>=37.0.0",
    "PyJWT>=2.4.0",
    "gunicorn>=20.1.0",
    "redis>=4.0.0",
    "prometheus-client>=0.14.0",
    "structlog>=22.0.0",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0", 
    "pytest-mock>=3.8.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.19.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "pytest-mock>=3.8.0",
    "httpx>=0.23.0",
]

[project.urls]
"Homepage" = "https://gitlab.example.com/group/renovate-test-python"
"Bug Reports" = "https://gitlab.example.com/group/renovate-test-python/-/issues"
"Source" = "https://gitlab.example.com/group/renovate-test-python"

[project.scripts]
renovate-test = "renovate_test.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "renovate_test.__version__"}

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["renovate_test"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-config",
    "--strict-markers",
    "--cov=renovate_test",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-report=html",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false