# docker/Dockerfile.production
# Multi-stage build for optimized production image

# Stage 1: Build stage with full toolchain
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    && rm -rf /var/cache/apk/*

# Copy package files
COPY package*.json ./

# Install ALL dependencies (including dev dependencies)
RUN npm ci --include=dev

# Copy source code
COPY . .

# Run build processes (linting, testing, etc.)
RUN npm run lint || echo "Linting completed with warnings"
RUN npm run test || echo "Tests completed"
RUN npm run security-audit || echo "Security audit completed"

# Clean dev dependencies for production
RUN npm ci --only=production && npm cache clean --force

# Stage 2: Production runtime image
FROM node:18-alpine AS production

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodeuser -u 1001

# Set working directory
WORKDIR /app

# Install production runtime dependencies
RUN apk add --no-cache \
    dumb-init \
    curl \
    && rm -rf /var/cache/apk/*

# Copy production dependencies from builder stage
COPY --from=builder --chown=nodeuser:nodejs /app/node_modules ./node_modules

# Copy application code
COPY --chown=nodeuser:nodejs src/ ./src/
COPY --chown=nodeuser:nodejs package*.json ./

# Set security headers and environment
ENV NODE_ENV=production
ENV NPM_CONFIG_LOGLEVEL=warn
ENV NPM_CONFIG_AUDIT_LEVEL=moderate

# Add labels for better container management
LABEL maintainer="GitLab Lab Tutorial"
LABEL version="1.0.0"
LABEL description="Production-ready Node.js application"
LABEL org.opencontainers.image.source="https://github.com/ly2xxx/gitlab_lab"
LABEL org.opencontainers.image.documentation="https://github.com/ly2xxx/gitlab_lab/blob/main/labs/lab-04-docker-integration/README.md"

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Use non-root user
USER nodeuser

# Expose port
EXPOSE 3000

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "src/server.js"]
